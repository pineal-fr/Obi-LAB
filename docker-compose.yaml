#version: '3.8'

# La section principale o√π tous les services (conteneurs) sont d√©finis.
services:
  ### ---------------------------------------------------- ###
  ### üê¨ MySQL (Service de Base de Donn√©es)               ###
  ### ---------------------------------------------------- ###
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    ports:
      - "8090:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: obi_database
      MYSQL_USER: ${WORDPRESS_DB_USER}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    # üëá DECOMMENTEZ CES TROIS LIGNES CI-DESSOUS *SEULEMENT EN TEST* POUR VOIR LES *LOGS DE LA BASE SQL DEPUIS LOKI*
    #command: 
      #- --general_log=1
      #- --general_log_file=/var/lib/mysql/mysql.lo
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### üåê WordPress (Moteur PHP-FPM uniquement)             ###
  ### ---------------------------------------------------- ###
  wordpress:
    image: wordpress:fpm-alpine
    container_name: wordpress
    restart: always
    expose:
      - "9000"
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_NAME: obi_database
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
    volumes:
      # Monte le volume pour les fichiers de WordPress.
      - wordpress_data:/var/www/html
    depends_on:
      - mysql
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### üöÄ NGINX (Serveur Web)                       ###
  ### ---------------------------------------------------- ###
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      # On lui donne acc√®s aux fichiers de WordPress pour qu'il puisse les servir.
      - wordpress_data:/var/www/html
      # On monte notre propre fichier de configuration pour NGINX.
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - wordpress
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### üìä NGINX Exporter (Remplace Apache Exporter)         ###
  ### ---------------------------------------------------- ###
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    restart: always
    ports:
      - "9113:9113" # Le port standard pour cet exportateur est 9113.
    # On lui indique o√π trouver la page de statut de NGINX via une commande.
    command:
      - '-nginx.scrape-uri=http://nginx/stub_status'
    depends_on:
      - nginx
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### üóÑÔ∏è phpMyAdmin (Outil de gestion de la BDD)          ###
  ### ---------------------------------------------------- ###
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${WORDPRESS_DB_USER}
      PMA_PASSWORD: ${WORDPRESS_DB_PASSWORD}
    depends_on:
      - mysql
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### üìà Prometheus (Base de donn√©es des m√©triques)       ###
  ### ---------------------------------------------------- ###
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - node-exporter
      - nginx-exporter
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### üé® Grafana (Outil de visualisation)                 ###
  ### ---------------------------------------------------- ###
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### üß† Node Exporter (Collecteur de m√©triques syst√®me)   ###
  ### ---------------------------------------------------- ###
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### ü™µ Loki (Base de donn√©es des logs)                  ###
  ### ---------------------------------------------------- ###
  loki:
    image: grafana/loki:2.9.1
    container_name: loki
    restart: always
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  ### ---------------------------------------------------- ###
  ### üìú Promtail (Collecteur de logs)                    ###
  ### ---------------------------------------------------- ###
  promtail:
    image: grafana/promtail:2.9.1
    container_name: promtail
    restart: always
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - monitoring

### ---------------------------------------------------- ###
### üíæ Volumes (Stockage persistant)                      ###
### ---------------------------------------------------- ###
volumes:
  wordpress_data:
  mysql_data:

### ---------------------------------------------------- ###
### üåê R√©seau (Communication entre conteneurs)           ###
### ---------------------------------------------------- ###
networks:
  monitoring:
    driver: bridge

